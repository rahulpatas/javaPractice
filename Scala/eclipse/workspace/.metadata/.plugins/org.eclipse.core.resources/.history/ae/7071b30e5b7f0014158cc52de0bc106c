package week4
import week4.list

object LinkedList {
 
 def nth[T] (n : Int, t: list[T]) : T =
 if(t.isEmpty ) throw new IndexOutOfBoundsException
 else if (n == 0) t.head
 else nth(n-1, t.tail)                            //> nth: [T](n: Int, t: week4.list[T])T
 
 val list = new Cons(1, new Cons(2, new Cons (3, new Nil)))
                                                  //> list  : week4.Cons[Int] = week4.Cons@39ba5a14
    nth(2, list)                                  //> res0: Int = 3
    nth(1, list)                                  //> java.lang.IndexOutOfBoundsException
                                                  //| 	at week4.LinkedList$$anonfun$main$1.nth$1(week4.LinkedList.scala:7)
                                                  //| 	at week4.LinkedList$$anonfun$main$1.apply$mcV$sp(week4.LinkedList.scala:
                                                  //| 13)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$$anonfun$$exe
                                                  //| cute$1.apply$mcV$sp(WorksheetSupport.scala:76)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.redirected(W
                                                  //| orksheetSupport.scala:65)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.$execute(Wor
                                                  //| ksheetSupport.scala:75)
                                                  //| 	at week4.LinkedList$.main(week4.LinkedList.scala:4)
                                                  //| 	at week4.LinkedList.main(week4.LinkedList.scala)
 }